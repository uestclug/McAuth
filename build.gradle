plugins {
    id("fabric-loom").version("0.11-SNAPSHOT")
    id("maven-publish")
    id("org.ajoberstar.grgit").version("4.1.0")
    id("com.modrinth.minotaur").version("1.2.1")
}

setSourceCompatibility(JavaVersion.toVersion(project.java_version))
setTargetCompatibility(JavaVersion.toVersion(project.java_version))
String real_version = "${project.mod_version}"

if (project.pre_release != "") {
    real_version += "-${project.pre_release}+"
    if (project.pre_release == "alpha" && !grgit.status().clean) {
        real_version += new Date().format("yyyyMMdd.HHmmss") + ".dirty." + grgit.head().abbreviatedId
    } else {
        real_version += grgit.head().abbreviatedId
    }
}

setArchivesBaseName("${project.archives_base_name}-${project.minecraft_version}")
setVersion(real_version)
setGroup(project.maven_group)

repositories {
    maven {
        url = "https://www.cursemaven.com"
    }
    maven {
        url = "https://masa.dy.fi/maven"
    }
    mavenCentral()
}

loom {
    accessWidenerPath.set(file("src/main/resources/mc_auth_mod.accesswidener"))
}

dependencies {
    minecraft("com.mojang:minecraft:${project.minecraft_version}")
    mappings("net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_mappings}:v2")
    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

    // sqlite
    implementation("org.xerial:sqlite-jdbc:${project.sqlite_jdbc_version}")
    include("org.xerial:sqlite-jdbc:${project.sqlite_jdbc_version}")

    // bcrypt
    //implementation group: "org.mindrot", name: "jbcrypt", version: "0.4"
    implementation 'org.connectbot:jbcrypt:1.0.2'
    include 'org.connectbot:jbcrypt:1.0.2'

    //include group: "org.mindrot", name: "jbcrypt", version: "0.4"

    // carpet
    modImplementation("carpet:fabric-carpet:${project.minecraft_version}-${project.carpet_core_version}")

    // Runtime
    modRuntimeOnly("curse.maven:lazydfu-433518:${project.lazydfu_version}")
    modRuntimeOnly("curse.maven:in-game-account-switcher-232676:${project.in_game_account_switcher_version}")
    modRuntimeOnly("curse.maven:imblockerfabric-399225:${project.imblockerfabric}")
}

processResources {
    inputs.property("version", real_version)
    filesMatching("fabric.mod.json") {
        expand(["version": real_version])
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release.set(Integer.parseInt(project.java_version as String))
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    // withSourcesJar()
}

jar {
    from("LICENSE") {
        rename({ return "${it}_${project.archives_base_name}" })
    }
}

//import com.modrinth.minotaur.TaskModrinthUpload
//
//task publishModrinth(type: TaskModrinthUpload) {
//	onlyIf {
//		System.getenv("MODRINTH") // Only attempt to run this task if the MODRINTH variable is set, otherwise SKIP it
//	}
//	token = System.getenv("MODRINTH")
//	changelog = System.getenv("CHANGELOG")
//	projectId = "CTIW5eos"
//	versionNumber = "${project.mod_version}-${project.minecraft_version}"
//	// On fabric, use "remapJar" instead of "jar"
//	uploadFile = remapJar
//	addGameVersion(project.minecraft_version as String)
//	addLoader("fabric")
//}
//repositories {
//	mavenCentral()
//	maven { url = "https://maven.nucleoid.xyz/" }
//	maven {
//		url 'https://masa.dy.fi/maven'
//	}
//}